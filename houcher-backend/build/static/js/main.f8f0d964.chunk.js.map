{"version":3,"sources":["reducers/notificationReducer.js","reducers/loginReducer.js","reducers/userReducer.js","utils/storage.js","services/user.js","reducers/myLikesReducer.js","reducers/myFansReducer.js","services/apartments.js","reducers/myApartmentReducer.js","reducers/newLikesReducer.js","reducers/apartmentReducer.js","reducers/singleApartmentReducer.js","reducers/viewReducer.js","reducers/loaderReducer.js","store.js","components/publicView/Landing.js","components/routes/AuthenticatedRoute.js","components/apartment/ApartmentCard.js","utils/filter.js","components/apartment/CardList.js","components/common/HeaderBar.js","constants/constants.js","components/apartment/ApartmentFilter.js","components/common/Home.js","components/apartment/ApartmentForm.js","components/apartment/SingleApartment.js","components/publicView/SignInForm.js","components/publicView/LoginForm.js","components/user/UserLikesAccordion.js","components/user/MyFans.js","components/user/MyLikes.js","components/user/UserInfoDetails.js","components/user/UserInfoForm.js","components/user/UserInfo.js","components/user/UserApartmentDetails.js","components/user/UserApartmentForm.js","components/user/UserApartment.js","components/user/UserLikes.js","components/user/UserFans.js","components/common/TabLabel.js","components/user/UserProfile.js","components/routes/UnAuthenticatedRoute.js","Routes.js","components/common/Loader.js","components/common/Notification.js","components/common/LikesBadge.js","components/common/ApplBar.js","components/common/Copyright.js","components/common/Footer.js","App.js","index.js"],"names":["timeoutId","loginReducer","state","action","type","initialState","token","expireTime","id","username","firstname","lastname","alias","myHome","myLikes","newApartmentType","newNumberOfRooms","newPostalCode","setUser","user","userReducer","window","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","baseUrl","getConfig","headers","Authorization","storage","create","credentials","a","axios","post","response","data","loginUser","getUser","getUrl","get","getUserPopulated","getUserFansHomes","editUser","editUrl","put","startFetching","isFetching","hasFetchError","fetchSuccess","errorMessage","message","fetchMyLikes","dispatch","userService","status","myLikesReducer","apartment","myFans","fetchMyFans","myFansReducer","setToken","newToken","getAll","getSingle","getMyApartment","newObject","config","editApartment","editedObject","fetchMyApartment","apartmentService","setMyApartment","myApartmentReducer","setNewLikes","number","newLikesReducer","setNotification","content","time","clearTimeout","setTimeout","notificationReducer","apartments","initializeApartments","apartmentReducer","concat","fetchSingleApartment","singleApartmentReducer","viewReducer","loaderReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","withStyles","theme","heroContent","padding","spacing","heroButtons","marginTop","footer","backgroundColor","palette","background","paper","cardGrid","paddingTop","card","height","display","flexDirection","cardMedia","paddingBottom","alignItems","justifyContent","cardContent","props","classes","Fragment","className","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","paragraph","Grid","container","justify","item","Button","RouterLink","to","xs","sm","md","Card","CardContent","MonetizationOn","style","fontSize","AccessTime","Favorite","AuthenticatedRoute","children","rest","useLocation","pathname","search","isLoggedIn","useSelector","flexGrow","cardSecondary","primary","light","size","float","toSingleView","handleLike","isLiked","likes","some","like","CardHeader","IconButton","aria-label","onClick","title","streetAddress","subheader","zipCode","city","CardMedia","image","images","direction","price","surfaceArea","apartmentSetting","apartmentType","buildYear","Divider","CardActions","filterApartments","apartmentList","filterParams","filteredList","bestSix","list","filter","toLowerCase","parseInt","newMaxPrice","findBest","apartmentTypes","length","includes","numberOfRooms","undefined","order","sort","b","Date","createdAt","apArray","apartmentContent","useDispatch","history","useHistory","view","push","likedApartment","find","index","findIndex","now","ownerHasSeen","splice","ind","indexOf","resUser","alertType","Skeleton","slice","map","key","startIcon","main","position","grey","common","white","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainContent","breakpoints","up","paddingRight","header","Paper","description","apartmentTypeList","numberOfRoomsList","layout","width","marginLeft","marginRight","marginBottom","leftIcon","filtersButton","paddingLeft","formControl","minWidth","applyFilter","useState","filtersOpen","setFiltersOpen","useEffect","FilterList","Collapse","in","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","e","target","name","label","FormControl","InputLabel","htmlFor","Select","multiple","value","renderValue","selected","join","input","Input","MenuItem","ListItemText","room","TextField","select","fullWidth","handleOrderChange","SelectProps","native","Home","useQueryParams","withDefault","ArrayParam","StringParam","BooleanParam","setFilter","f","dragHere","border","textAlign","dragHereSpan","margin","dragHereButton","errors","borderRadius","imageList","flexWrap","imageItem","submit","hasSauna","hasBalcony","hasOwnPlot","hasElevator","numberOfFloors","apartmentObject","setApartmentObject","setImages","accepType","createNew","preventDefault","formData","FormData","i","append","file","Object","entries","newApartment","update","updateCheckBox","onSubmit","required","InputProps","endAdornment","InputAdornment","open","placeholder","multiline","rows","addUpdateIndex","maxNumber","maxFileSize","acceptType","dataURLKey","onImageUpload","onImageRemove","isDragging","dragProps","src","alt","Checkbox","ownPlot","heading","minHeight","useParams","singleApartment","showThumbs","showStatus","hasOwnBalcony","hasOwnElevator","hasOwnSauna","keys","avatar","secondary","form","link","textDecoration","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","passwordMatch","setPasswordMatch","createUser","event","Avatar","autoFocus","disabled","error","alerType","res","console","noValidate","autoComplete","root","accordion","launchIcon","verticalAlign","details","maxHeight","overflow","threedots","Accordion","AccordionSummary","expandIcon","AccordionDetails","paperProgress","progress","myApartment","likesSeen","myApartmentLikesSeen","setLikesSeen","CircularProgress","setIsEditing","Box","fontWeight","handleChange","editProfile","cancelEdit","option","defaultValue","helperText","isEditingUser","setIsEditingUser","userObject","setUserObject","obj","setIsEditingHome","Price","handleInputChange","handleCheckboxChange","isEditingHome","myApartmentObject","setMyApartmentObject","editedApartment","responsive","down","text","TabPanel","other","role","hidden","aria-labelledby","a11yProps","customflex","setValue","currentTab","param","result","RegExp","exec","parseQueryParam","location","AppBar","Tabs","newValue","queryParams","flexContainer","Tab","icon","AccountCircle","HomeOutlined","GradeOutlined","FavoriteBorderOutlined","UnauthenticatedRoute","redirect","url","href","replace","regex","results","decodeURIComponent","getQueryString","exact","path","backdrop","zIndex","drawer","Backdrop","Alert","elevation","useStyles","makeStyles","Notification","notification","Snackbar","anchorOrigin","vertical","horizontal","severity","StyledBadge","badge","Badge","newLikes","forEach","badgeContent","StyledTypography","subtitle1","toolbar","flexgrow","titleMain","anchorEl","setAnchorEl","Boolean","menuItemDisabled","Toolbar","HomeWorkOutlined","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","transformOrigin","onClose","clear","Copyright","Link","getFullYear","createMuiTheme","dark","contrastText","withRouter","apartmentservice","loggedInUser","timeNow","getUserData","CssBaseline","Routes","ReactDOM","render","ReactRouterRoute","Route","document","getElementById"],"mappings":"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","file":"static/js/main.f8f0d964.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SET_NOTIFICATION':\r\n      return action.content;\r\n    case 'CLEAR_NOTIFICATION':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nlet timeoutId;\r\n\r\nexport const setNotification = (content, time) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      content,\r\n    });\r\n\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_NOTIFICATION',\r\n      });\r\n    }, time * 1000);\r\n  };\r\n};\r\n\r\nexport const clearNotification = (id) => ({ type: 'CLEAR_NOTIFICATION' });\r\n\r\nexport default notificationReducer;\r\n","const loginReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_USER':\r\n      return true;\r\n    case 'LOGOUT_USER':\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userLogin = () => {\r\n  return {\r\n    type: 'LOGIN_USER',\r\n  };\r\n};\r\n\r\nexport const userLogout = () => {\r\n  return {\r\n    type: 'LOGOUT_USER',\r\n  };\r\n};\r\n\r\nexport default loginReducer;\r\n","const initialState = {\r\n  token: '',\r\n  expireTime: '',\r\n  id: '',\r\n  username: '',\r\n  firstname: '',\r\n  lastname: '',\r\n  alias: '',\r\n  myHome: '',\r\n  myLikes: [],\r\n  newApartmentType: '',\r\n  newNumberOfRooms: '',\r\n  newPostalCode: '',\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return action.user;\r\n    case 'RESET_USER':\r\n      return action.user;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  }\r\n}\r\n\r\nexport const resetUser = () => {\r\n  return {\r\n    type: 'RESET_USER',\r\n    user: {}\r\n  }\r\n}\r\n\r\nexport default  userReducer;\r\n","const storageKey = 'loggedHoucherUser';\r\n\r\nconst saveUser = (user) =>\r\n  window.localStorage.setItem(storageKey, JSON.stringify(user));\r\n\r\nconst getUser = () =>\r\n  JSON.parse(localStorage.getItem(storageKey));\r\n\r\nconst logoutUser = () =>\r\n  localStorage.removeItem(storageKey);\r\n\r\nexport default {\r\n  saveUser,\r\n  getUser,\r\n  logoutUser\r\n}","import axios from 'axios';\r\nimport storage from '../utils/storage';\r\n\r\nconst baseUrl = '/api/user';\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.getUser().token}` },\r\n  };\r\n};\r\n\r\n// User sigin i.e. create a new user account\r\nconst create = async (credentials) => {\r\n  const signinUrl = baseUrl + '/signin';\r\n  const response = await axios.post(signinUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\n// User login\r\nconst loginUser = async (credentials) => {\r\n  const loginUrl = baseUrl + '/login';\r\n  const response = await axios.post(loginUrl, credentials);\r\n  return response;\r\n};\r\n\r\n// Get a user's not-populated data by ID\r\n// User's home and likes cointain only the IDs\r\nconst getUser = async (id) => {\r\n  const getUrl = `${baseUrl}/${id}`;\r\n  const response = await axios.get(getUrl, getConfig());\r\n  return response;\r\n};\r\n\r\n// Get a user's populated data by ID\r\n// User's home and likes are populated\r\nconst getUserPopulated = async (id) => {\r\n  const getUrl = `${baseUrl}/populate/${id}`;\r\n  const response = await axios.get(getUrl, getConfig());\r\n  return response;\r\n};\r\n\r\n// Get the home data for all users who have liked this user's home\r\nconst getUserFansHomes = async (id) => {\r\n  const getUrl = `${baseUrl}/likes/${id}`;\r\n  const response = await axios.get(getUrl, getConfig());\r\n  return response;\r\n};\r\n\r\n// Edit the user data by ID\r\nconst editUser = async (user) => {\r\n  const editUrl = `${baseUrl}/${user.id}`;\r\n  const response = await axios.put(editUrl, user, getConfig());\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  create,\r\n  loginUser,\r\n  getUser,\r\n  getUserPopulated,\r\n  getUserFansHomes,\r\n  editUser,\r\n};\r\n","import userService from '../services/user';\r\n\r\nconst startFetching = (state) => ({\r\n  ...state,\r\n  isFetching: true,\r\n  hasFetchError: false,\r\n});\r\n\r\nconst fetchSuccess = (state, action) => ({\r\n  ...state,\r\n  isFetching: false,\r\n  hasFetchError: false,\r\n  user: action.data,\r\n});\r\n\r\nconst hasFetchError = (state, action) => ({\r\n  ...state,\r\n  hasFetchError: true,\r\n  isFetching: false,\r\n  errorMessage: action.data.message,\r\n});\r\n\r\nexport const fetchMyLikes = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'FETCH_MYLIKES',\r\n      });\r\n      const response = await userService.getUserPopulated(id);\r\n      if (response.status >= 200 && response.status < 300) {\r\n        dispatch({\r\n          type: 'FETCH_MYLIKES_SUCCESS',\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (exception) {\r\n      dispatch({\r\n        type: 'HAS_FETCH_ERROR_MYLIKES',\r\n        data: exception,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setMyLikes = (apartment) => {\r\n  return {\r\n    type: 'SET_MYLIKES',\r\n    data: apartment,\r\n  };\r\n};\r\n\r\nexport const resetMyLikes = () => {\r\n  return {\r\n    type: 'RESET_MYLIKES',\r\n    data: {\r\n      user: {},\r\n      isFetching: false,\r\n      hasFetchError: false,\r\n      errorMessage: null,\r\n    }\r\n  };\r\n};\r\n\r\nconst myLikesReducer = (\r\n  state = {\r\n    user: {},\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'SET_MYLIKES':\r\n      return { ...state, apartment: action.data };\r\n    case 'FETCH_MYLIKES':\r\n      return startFetching(state);\r\n    case 'FETCH_MYLIKES_SUCCESS':\r\n      return fetchSuccess(state, action);\r\n    case 'HAS_FETCH_ERROR_MYLIKES':\r\n      return hasFetchError(state, action);\r\n    case 'RESET_MYLIKES':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myLikesReducer;\r\n","import userService from '../services/user';\r\n\r\nconst startFetching = (state) => ({\r\n  ...state,\r\n  isFetching: true,\r\n  hasFetchError: false,\r\n});\r\n\r\nconst fetchSuccess = (state, action) => ({\r\n  ...state,\r\n  isFetching: false,\r\n  hasFetchError: false,\r\n  myFans: action.data,\r\n});\r\n\r\nconst hasFetchError = (state, action) => ({\r\n  ...state,\r\n  hasFetchError: true,\r\n  isFetching: false,\r\n  errorMessage: action.data.message,\r\n});\r\n\r\nexport const fetchMyFans = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'FETCH_MYFANS',\r\n      });\r\n      const response = await userService.getUserFansHomes(id);\r\n      if (response.status >= 200 && response.status < 300) {\r\n        dispatch({\r\n          type: 'FETCH_MYFANS_SUCCESS',\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (exception) {\r\n      dispatch({\r\n        type: 'HAS_FETCH_ERROR_MYFANS',\r\n        data: exception,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetMyFans = () => {\r\n  return {\r\n    type: 'RESET_MYFANS',\r\n    data: {\r\n      myFans: [],\r\n      isFetching: false,\r\n      hasFetchError: false,\r\n      errorMessage: null,\r\n    }\r\n  };\r\n};\r\n\r\nconst myFansReducer = (\r\n  state = {\r\n    myFans: [],\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'FETCH_MYFANS':\r\n      return startFetching(state);\r\n    case 'FETCH_MYFANS_SUCCESS':\r\n      return fetchSuccess(state, action);\r\n    case 'HAS_FETCH_ERROR_MYFANS':\r\n      return hasFetchError(state, action);\r\n    case 'RESET_MYFANS':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myFansReducer;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/apartments';\r\n\r\nlet token = '';\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response;\r\n};\r\n\r\nconst getSingle = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response;\r\n};\r\n\r\nconst getMyApartment = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response;\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst editApartment = async (editedObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const editUrl = `${baseUrl}/${editedObject.id}`;\r\n  const response = await axios.put(editUrl, editedObject, config);\r\n  return response;\r\n};\r\n\r\nexport default { setToken, getAll, getSingle, getMyApartment, create, editApartment };\r\n","import apartmentService from '../services/apartments';\r\n\r\nconst startFetching = (state) => ({\r\n  ...state,\r\n  isFetching: true,\r\n  hasFetchError: false,\r\n});\r\n\r\nconst fetchSuccess = (state, action) => ({\r\n  ...state,\r\n  isFetching: false,\r\n  hasFetchError: false,\r\n  apartment: action.data,\r\n});\r\n\r\nconst hasFetchError = (state, action) => ({\r\n  ...state,\r\n  hasFetchError: true,\r\n  isFetching: false,\r\n  errorMessage: action.data.message,\r\n});\r\n\r\nexport const fetchMyApartment = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'FETCH_MY_APARTMENT',\r\n      });\r\n      const response = await apartmentService.getMyApartment(id);\r\n      if (response.status >= 200 && response.status < 300) {\r\n        dispatch({\r\n          type: 'FETCH_MY_APARTMENT_SUCCESS',\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (exception) {\r\n      dispatch({\r\n        type: 'HAS_FETCH_ERROR_MY_APARTMENT',\r\n        data: exception,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setMyApartment = (apartment) => {\r\n  return {\r\n    type: 'SET_APARTMENT',\r\n    data: apartment,\r\n  };\r\n};\r\n\r\nexport const resetMyApartment = () => {\r\n  return {\r\n    type: 'RESET_MY_APARTMENT',\r\n    data: {\r\n      apartment: {},\r\n      isFetching: false,\r\n      hasFetchError: false,\r\n      errorMessage: null,\r\n    }\r\n  };\r\n};\r\n\r\nconst myApartmentReducer = (\r\n  state = {\r\n    apartment: {},\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'SET_APARTMENT':\r\n      return { ...state, apartment: action.data };\r\n    case 'FETCH_MY_APARTMENT':\r\n      return startFetching(state);\r\n    case 'FETCH_MY_APARTMENT_SUCCESS':\r\n      return fetchSuccess(state, action);\r\n    case 'HAS_FETCH_ERROR_MY_APARTMENT':\r\n      return hasFetchError(state, action);\r\n    case 'RESET_MY_APARTMENT':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myApartmentReducer;\r\n","const newLikesReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SET_NEWLIKES':\r\n      return action.number;\r\n    case 'CLEAR_NEWLIKES':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNewLikes = (number) => {\r\n  return {\r\n    type: 'SET_NEWLIKES',\r\n    number,\r\n  };\r\n};\r\n\r\nexport const clearNewLikes = () => {\r\n  return {\r\n    type: 'CLEAR_NEWLIKES'\r\n  }\r\n};\r\n\r\nexport default newLikesReducer;\r\n","import apartmentService from '../services/apartments';\r\n\r\nconst startFetching = (state) => ({\r\n  ...state,\r\n  isFetching: true,\r\n});\r\n\r\nconst fetchSuccess = (state, action) => ({\r\n  ...state,\r\n  isFetching: false,\r\n  apartments: action.data,\r\n});\r\n\r\nconst hasFetchError = (state, action) => ({\r\n  ...state,\r\n  hasFetchError: true,\r\n  isFetching: false,\r\n  errorMessage: action.data.message,\r\n});\r\n\r\nexport const createApartment = (newApartment) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'CREATE_APARTMENT',\r\n      data: newApartment,\r\n    });\r\n  };\r\n};\r\n\r\nexport const initializeApartments = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'FETCH_APARTMENTS',\r\n      });\r\n      const response = await apartmentService.getAll();\r\n      if (response.status >= 200 && response.status < 300) {\r\n        dispatch({\r\n          type: 'FETCH_APARTMENTS_SUCCESS',\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (exception) {\r\n      dispatch({\r\n        type: 'HAS_FETCH_ERROR_APARTMENTS',\r\n        data: exception,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetApartments = () => {\r\n  return {\r\n    type: 'RESET_APARTMENTS',\r\n    data: {\r\n      apartments: [],\r\n      isFetching: false,\r\n      hasFetchError: false,\r\n      errorMessage: null,\r\n    }\r\n  };\r\n};\r\n\r\nconst apartmentReducer = (\r\n  state = {\r\n    apartments: [],\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'FETCH_APARTMENTS':\r\n      return startFetching(state);\r\n    case 'FETCH_APARTMENTS_SUCCESS':\r\n      return fetchSuccess(state, action);\r\n    case 'HAS_FETCH_ERROR_APARTMENTS':\r\n      return hasFetchError(state, action);\r\n    case 'CREATE_APARTMENT':\r\n      return state.apartments.concat(action.data);\r\n    case 'RESET_APARTMENTS':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default apartmentReducer;\r\n","import apartmentService from '../services/apartments';\r\n\r\nconst startFetching = (state) => ({\r\n  ...state,\r\n  isFetching: true,\r\n  hasFetchError: false,\r\n});\r\n\r\nconst fetchSuccess = (state, action) => ({\r\n  ...state,\r\n  isFetching: false,\r\n  hasFetchError: false,\r\n  apartment: action.data,\r\n});\r\n\r\nconst hasFetchError = (state, action) => ({\r\n  ...state,\r\n  hasFetchError: true,\r\n  isFetching: false,\r\n  errorMessage: action.data.message,\r\n});\r\n\r\nexport const fetchSingleApartment = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'FETCH_APARTMENT',\r\n      });\r\n      const response = await apartmentService.getSingle(id);\r\n      if (response.status >= 200 && response.status < 300) {\r\n        dispatch({\r\n          type: 'FETCH_APARTMENT_SUCCESS',\r\n          data: response.data,\r\n        });\r\n      }\r\n    } catch (exception) {\r\n      dispatch({\r\n        type: 'HAS_FETCH_ERROR_APARTMENT',\r\n        data: exception,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetSingleApartment = () => {\r\n  return {\r\n    type: 'RESET_SINGLE_APARTMENT',\r\n    data: {\r\n      apartment: {},\r\n      isFetching: false,\r\n      hasFetchError: false,\r\n      errorMessage: null,\r\n    }\r\n  };\r\n};\r\n\r\nconst singleApartmentReducer = (\r\n  state = {\r\n    apartment: {},\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'FETCH_APARTMENT':\r\n      return startFetching(state);\r\n    case 'FETCH_APARTMENT_SUCCESS':\r\n      return fetchSuccess(state, action);\r\n    case 'HAS_FETCH_ERROR_APARTMENT':\r\n      return hasFetchError(state, action);\r\n    case 'RESET_SINGLE_APARTMENT':\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default singleApartmentReducer;\r\n","const viewReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'SHOW_ALL':\r\n      return true;\r\n    case 'SHOW_SIX':\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const showAll = () => {\r\n  return {\r\n    type: 'SHOW_ALL',\r\n  };\r\n};\r\n\r\nexport const showSix = () => {\r\n  return {\r\n    type: 'SHOW_SIX',\r\n  };\r\n};\r\n\r\nexport default viewReducer;\r\n","const loaderReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'START_LOADING':\r\n      return true;\r\n    case 'STOP_LOADING':\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type: 'START_LOADING',\r\n  };\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  return {\r\n    type: 'STOP_LOADING',\r\n  };\r\n};\r\n\r\nexport default loaderReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport loginReducer from './reducers/loginReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport myLikesReducer from './reducers/myLikesReducer';\r\nimport myFansReducer from './reducers/myFansReducer';\r\nimport myApartmentReducer from './reducers/myApartmentReducer';\r\nimport newLikesReducer from './reducers/newLikesReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport apartmentReducer from './reducers/apartmentReducer';\r\nimport singleApartmentReducer from './reducers/singleApartmentReducer';\r\nimport viewReducer from './reducers/viewReducer';\r\nimport loaderReducer from './reducers/loaderReducer';\r\n\r\nconst reducer = combineReducers({\r\n  loginReducer,\r\n  userReducer,\r\n  myLikesReducer,\r\n  myFansReducer,\r\n  myApartmentReducer,\r\n  newLikesReducer,\r\n  notificationReducer,\r\n  apartmentReducer,\r\n  singleApartmentReducer,\r\n  viewReducer,\r\n  loaderReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { AccessTime, Favorite, MonetizationOn } from '@material-ui/icons';\r\n\r\nconst styles = (theme) => ({\r\n  heroContent: {\r\n    // backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    // paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '20.25%', // 16:9\r\n    paddingBottom: '17.25%', // 16:9\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  cardContent: {\r\n    //flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nfunction Landing(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Houcher\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              Vaihda nykyinen asuntosi unelmiesi asuntoon! Houcherilla löydät\r\n              uuden asunnon ja samalla myyt asuntosi sitä tarvitsevalle.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                  >\r\n                    Kirjaudu\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    component={RouterLink}\r\n                    to=\"/signin\"\r\n                  >\r\n                    Luo tili\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n          <Container className={classes.cardGrid} maxWidth=\"md\">\r\n            {/* End hero unit */}\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardMedia}>\r\n                    <MonetizationOn\r\n                      style={{ color: '#4caf50', fontSize: 65 }}\r\n                    />\r\n                  </CardContent>\r\n\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography>\r\n                      Säästä selvää rahaa! Houcherilla et tarvitse välittäjää\r\n                      etkä maksa välityspalkkioita.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardMedia}>\r\n                    <AccessTime style={{ color: '#2979ff', fontSize: 65 }} />\r\n                  </CardContent>\r\n\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography>\r\n                      Säästä aikaa! Löydä asunnollesi ostaja ja samalla\r\n                      itsellesi unelmiesi asunto.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardMedia}>\r\n                    <Favorite style={{ color: '#ff1744', fontSize: 65 }} />\r\n                  </CardContent>\r\n\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography>\r\n                      Löydä asuntojen match ja nauti elämäsi tärkeimpien\r\n                      kauppojen helppoudesta.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nLanding.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Landing);\r\n","import React from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AuthenticatedRoute = ({ children, ...rest }) => {\r\n  const { pathname, search } = useLocation();\r\n  const isLoggedIn = useSelector((state) => state.loginReducer);\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {isLoggedIn ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={`/login?redirect=${pathname}${search}`} />\r\n      )}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {\r\n  CardMedia,\r\n  CardHeader,\r\n  IconButton,\r\n  Grid,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  cardSecondary: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n  size: {\r\n    float: 'right',\r\n  },\r\n});\r\n\r\nconst ApartmentCard = ({\r\n  classes,\r\n  apartment,\r\n  user,\r\n  toSingleView,\r\n  handleLike,\r\n}) => {\r\n\r\n  const isLiked = apartment.likes\r\n  ? apartment.likes.some(like => like.id === user.id)\r\n  : false;\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          action={\r\n            <IconButton\r\n              aria-label=\"settings\"\r\n              onClick={() => handleLike(apartment.id)}\r\n            >\r\n              {isLiked ? (\r\n                <FavoriteIcon color=\"primary\" />\r\n              ) : (\r\n                <FavoriteBorderIcon color=\"primary\" />\r\n              )}\r\n            </IconButton>\r\n          }\r\n          title={<Typography>{apartment.streetAddress}</Typography>}\r\n          subheader={\r\n            <>\r\n              {apartment.zipCode} {apartment.city}\r\n            </>\r\n          }\r\n        />\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={apartment.images[0]}\r\n          title=\"Image title\"\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Grid container spacing={4} direction=\"row\" justify=\"space-between\">\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h6\">\r\n                {apartment.price} €\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n                component=\"h6\"\r\n                align=\"right\"\r\n              >\r\n                {apartment.surfaceArea} m²\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography>{apartment.apartmentSetting}</Typography>\r\n          <Typography>\r\n            {apartment.apartmentType}, {apartment.buildYear}\r\n          </Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent className={classes.cardSecondary}>\r\n          <Grid container spacing={4} direction=\"row\" justify=\"space-between\">\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"subtitle2\">\r\n                Vaihto:\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Typography>\r\n            {apartment.user.newApartmentType}\r\n            , {apartment.user.newNumberOfRooms}h ,{' '}\r\n            {apartment.user.newPostalCode}\r\n          </Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => toSingleView(apartment.id)}\r\n          >\r\n            Lisää\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nApartmentCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  apartment: PropTypes.object.isRequired,\r\n  toSingleView: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ApartmentCard);\r\n","const findBest = (list, user) => {\r\n  let returnedList;\r\n  let firstFilter;\r\n\r\n  // returnedList = list.filter(\r\n  //   (apartment) => apartment.numberOfRooms === user.newNumberOfRooms\r\n  // );\r\n\r\n  // returnedList = list.filter(\r\n  //   (apartment) => apartment.zipCode === user.newPostalCode\r\n  // );\r\n\r\n  firstFilter = list.filter(\r\n    (apartment) =>\r\n      apartment.apartmentType.toLowerCase() === user.newApartmentType\r\n  );\r\n\r\n  returnedList = firstFilter.filter(\r\n    (apartment) =>\r\n      parseInt(apartment.price, 10) <= parseInt(user.newMaxPrice, 10)\r\n  );\r\n\r\n  return returnedList;\r\n};\r\n\r\nexport const filterApartments = (apartmentList, filterParams, user) => {\r\n  let filteredList = apartmentList;\r\n\r\n  if (filterParams.bestSix === true) {\r\n    filteredList = findBest(apartmentList, user);\r\n  }\r\n\r\n  if (filterParams.apartmentTypes.length > 0) {\r\n    filteredList = filteredList.filter((apartment) =>\r\n      filterParams.apartmentTypes.includes(apartment.apartmentType)\r\n    );\r\n  }\r\n\r\n  if (filterParams.numberOfRooms.length > 0) {\r\n    filteredList = filteredList.filter((apartment) =>\r\n      filterParams.numberOfRooms.includes(apartment.numberOfRooms)\r\n    );\r\n  }\r\n\r\n  if (filterParams.order !== undefined) {\r\n    if (filterParams.order === 'latest') {\r\n      filteredList.sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      );\r\n    }\r\n    if (filterParams.order === 'oldest') {\r\n      filteredList.sort(\r\n        (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\r\n      );\r\n    }\r\n  }\r\n\r\n  return filteredList;\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Container, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PropTypes from 'prop-types';\r\nimport ApartmentCard from './ApartmentCard';\r\nimport apartmentService from '../../services/apartments';\r\nimport userService from '../../services/user';\r\nimport { filterApartments } from '../../utils/filter';\r\nimport { setUser } from '../../reducers/userReducer';\r\nimport { initializeApartments } from '../../reducers/apartmentReducer';\r\nimport { showAll } from '../../reducers/viewReducer';\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\n\r\nconst styles = (theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst CardList = ({ classes, user, apartmentContent, filter }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const view = useSelector((state) => state.viewReducer);\r\n  const apartments = apartmentContent.apartments\r\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n    .filter((item) => item.id !== user.myHome);\r\n\r\n  const toSingleView = (id) => {\r\n    history.push(`/home/${id}`);\r\n  };\r\n\r\n  const lastNumber = (apArray) => {\r\n    let num;\r\n    if (!view) {\r\n      num = 6;\r\n    } else {\r\n      num = apArray.length + 1;\r\n    }\r\n    return num;\r\n  };\r\n\r\n  const handleLike = async (id) => {\r\n    const likedApartment = apartmentContent.apartments.find(\r\n      (item) => item.id === id\r\n    );\r\n    \r\n    const index = likedApartment.likes.findIndex(like => like.id === user.id);\r\n    if (index === -1) {\r\n      const time = Date.now();\r\n      likedApartment.likes.push({\r\n        id: user.id,\r\n        time,\r\n        ownerHasSeen: false\r\n      })\r\n    } else {\r\n      likedApartment.likes.splice(index, 1);\r\n    }\r\n    likedApartment.user = likedApartment.user.id;\r\n\r\n    const ind = user.myLikes.indexOf(id);\r\n    if (ind === -1) {\r\n      user.myLikes.push(id);\r\n    } else {\r\n      user.myLikes.splice(ind, 1);\r\n    }\r\n\r\n    try {\r\n      // const resApartment = await apartmentService.editApartment(likedApartment);\r\n      await apartmentService.editApartment(likedApartment);\r\n      const resUser = await userService.editUser(user);\r\n      // const updatedApartments = apartmentContent.apartments.filter(item => (\r\n      //   item.id === id ? resApartment : item\r\n      // ))\r\n      dispatch(setUser(resUser.data));\r\n      dispatch(initializeApartments());\r\n    } catch (exception) {\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Hups! Jokin meni vikaan. Yritä myöhemmin uudelleen.',\r\n            alertType: 'error',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  let content;\r\n  if (apartmentContent.isFetching) {\r\n    content = (\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Skeleton variant=\"rect\" height={150} />\r\n            <Skeleton variant=\"rect\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Skeleton variant=\"rect\" height={150} />\r\n            <Skeleton variant=\"rect\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Skeleton variant=\"rect\" height={150} />\r\n            <Skeleton variant=\"rect\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  } else if (apartmentContent.hasFetchError) {\r\n    content = apartmentContent.errorMessage;\r\n  } else {\r\n    content = (\r\n      <>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            {filterApartments(apartments, filter, user)\r\n              .slice(0, lastNumber(apartmentContent.apartments))\r\n              .map((apartment) => (\r\n                <Grid item key={apartment.id} xs={12} sm={6} md={4}>\r\n                  <ApartmentCard\r\n                    apartment={apartment}\r\n                    user={user}\r\n                    toSingleView={toSingleView}\r\n                    handleLike={handleLike}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n          {!view ? (\r\n            <Grid container justify=\"center\" spacing={4}>\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  startIcon={<ArrowDownwardIcon />}\r\n                  onClick={() => dispatch(showAll())}\r\n                >\r\n                  Näytä lisää\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          ) : null}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nCardList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  apartmentContent: PropTypes.object.isRequired,\r\n  filter: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardList);\r\n","import React from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n  },\r\n  mainContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n});\r\n\r\nconst HeaderBar = (props) => {\r\n  const { classes, header } = props;\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        className={classes.main}\r\n        style={{ backgroundImage: `url(${header.image})` }}\r\n      >\r\n        <div className={classes.overlay} />\r\n        <Grid container>\r\n          <Grid item md={6}>\r\n            <div className={classes.mainContent}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h3\"\r\n                color=\"inherit\"\r\n                gutterBottom\r\n              >\r\n                {header.title}\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n                {header.description}\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nHeaderBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(HeaderBar);\r\n","export const apartmentTypeList = [\r\n  {\r\n    id: 1,\r\n    type: 'Kerrostalo',\r\n  },\r\n  {\r\n    id: 2,\r\n    type: 'Rivitalo',\r\n  },\r\n  {\r\n    id: 3,\r\n    type: 'Paritalo',\r\n  },\r\n  {\r\n    id: 4,\r\n    type: 'Omakotitalo',\r\n  },\r\n];\r\n\r\nexport const numberOfRoomsList = [\r\n  {\r\n    number: '1',\r\n  },\r\n  {\r\n    number: '2',\r\n  },\r\n  {\r\n    number: '3',\r\n  },\r\n  {\r\n    number: '4',\r\n  },\r\n  {\r\n    number: '5',\r\n  },\r\n  {\r\n    number: '6',\r\n  },\r\n  {\r\n    number: '7',\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Collapse,\r\n  FormControl,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  Select,\r\n  Input,\r\n  MenuItem,\r\n  ListItemText,\r\n  TextField,\r\n  Switch,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterList } from '@material-ui/icons';\r\nimport { showAll } from '../../reducers/viewReducer';\r\nimport {\r\n  apartmentTypeList,\r\n  numberOfRoomsList,\r\n} from '../../constants/constants';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(915 + theme.spacing(2) * 2)]: {\r\n      width: 915,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(915 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(),\r\n  },\r\n  filtersButton: {\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(),\r\n  },\r\n  formControl: {\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n  },\r\n});\r\n\r\nconst ApartmentFilter = ({ classes, applyFilter, filter }) => {\r\n  const [filtersOpen, setFiltersOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      filter.numberOfRooms.length > 0 ||\r\n      filter.apartmentTypes.length > 0 ||\r\n      filter.bestSix === true\r\n    ) {\r\n      dispatch(showAll());\r\n    }\r\n  }, [filter, dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    applyFilter({\r\n      ...filter,\r\n      apartmentTypes: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    applyFilter({\r\n      ...filter,\r\n      numberOfRooms: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleOrderChange = (e) => {\r\n    applyFilter({\r\n      ...filter,\r\n      order: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleBestChange = (e) => {\r\n    applyFilter({\r\n      apartmentTypes: [],\r\n      numberOfRooms: [],\r\n      order: undefined,\r\n      bestSix: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const refresh = () => {\r\n    applyFilter({\r\n      apartmentTypes: [],\r\n      numberOfRooms: [],\r\n      order: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        <Button\r\n          className={classes.filtersButton}\r\n          onClick={() => setFiltersOpen(!filtersOpen)}\r\n        >\r\n          <FilterList className={classes.leftIcon} />\r\n          Hae asuntoja\r\n        </Button>\r\n        <Collapse in={filtersOpen}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={6}>\r\n              <Grid item xs={12}>\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={filter.bestSix}\r\n                        onChange={handleBestChange}\r\n                        name=\"checkedA\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Näytä sopivimmat vaihdot\"\r\n                  />\r\n                </FormGroup>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox-first\">\r\n                    Talotyyppi\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    // fullWidth\r\n                    // margin=\"dense\"\r\n                    value={filter.apartmentTypes}\r\n                    onChange={handleChange}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    input={<Input id=\"select-multiple-checkbox-first\" />}\r\n                  >\r\n                    {apartmentTypeList.map((apartment) => (\r\n                      <MenuItem key={apartment.id} value={apartment.type}>\r\n                        <ListItemText primary={apartment.type} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"select-multiple-checkbox-second\">\r\n                    Huoneiden lukumäärä\r\n                  </InputLabel>\r\n                  <Select\r\n                    multiple\r\n                    // required\r\n                    // fullWidth\r\n                    //margin=\"dense\"\r\n                    value={filter.numberOfRooms}\r\n                    onChange={handleRoomChange}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    input={<Input id=\"select-multiple-checkbox-second\" />}\r\n                  >\r\n                    {numberOfRoomsList.map((room) => (\r\n                      <MenuItem key={room.number} value={room.number}>\r\n                        <ListItemText primary={room.number} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  //margin=\"normal\"\r\n                  name=\"customerId\"\r\n                  label=\"Järjestä ilmoitukset\"\r\n                  value={filter.order === undefined ? '' : filter.order}\r\n                  onChange={(e) => handleOrderChange(e)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                >\r\n                  <option aria-label=\"Empty option\" />\r\n                  <option key=\"latest\" value=\"latest\">\r\n                    Uusimman mukaan\r\n                  </option>\r\n                  <option key=\"oldest\" value=\"oldest\">\r\n                    Vanhimman mukaan\r\n                  </option>\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  // type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => refresh()}\r\n                >\r\n                  Tyhjennä\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Collapse>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nApartmentFilter.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  applyFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ApartmentFilter);\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardList from '../apartment/CardList';\r\nimport HeaderBar from './HeaderBar';\r\nimport ApartmentFilter from '../apartment/ApartmentFilter';\r\nimport { initializeApartments } from '../../reducers/apartmentReducer';\r\nimport {\r\n  useQueryParams,\r\n  ArrayParam,\r\n  withDefault,\r\n  StringParam,\r\n  BooleanParam,\r\n} from 'use-query-params';\r\n\r\nconst header = {\r\n  title: 'Tervetuloa Houcheriin!',\r\n  description: 'Aloitetaan unelmiesi asunnon etsintä',\r\n  image:\r\n    'https://houcher-apartment-images.s3.eu-central-1.amazonaws.com/pawel-czerwinski-1CZCGvc_DBQ-unsplash.jpg',\r\n};\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const apartmentContent = useSelector((state) => state.apartmentReducer);\r\n  const user = useSelector((state) => state.userReducer);\r\n  const history = useHistory();\r\n  const [filter, setFilter] = useQueryParams({\r\n    apartmentTypes: withDefault(ArrayParam, []),\r\n    numberOfRooms: withDefault(ArrayParam, []),\r\n    order: StringParam,\r\n    bestSix: withDefault(BooleanParam, false),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user.username && (!user.firstname || !user.lastname)) {\r\n      history.push(`/user`);\r\n    }\r\n  }, [user, history]);\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeApartments());\r\n  }, [dispatch]);\r\n\r\n  const applyFilter = (f) => {\r\n    setFilter(f, 'push');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderBar header={header} />\r\n      <ApartmentFilter applyFilter={applyFilter} filter={filter} />\r\n      <CardList\r\n        apartmentContent={apartmentContent}\r\n        user={user}\r\n        filter={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ImageUploading from 'react-images-uploading';\r\n\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Paper, Typography, Button, InputAdornment } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\nimport { startLoading, stopLoading } from '../../reducers/loaderReducer';\r\nimport apartmentService from '../../services/apartments';\r\nimport userService from '../../services/user';\r\nimport {\r\n  apartmentTypeList,\r\n  numberOfRoomsList,\r\n} from '../../constants/constants';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  dragHere: {\r\n    border: 'medium dashed ',\r\n    width: '50%',\r\n    padding: 20,\r\n    textAlign: 'center',\r\n  },\r\n  dragHereSpan: {\r\n    display: 'block',\r\n    maxWidth: '8rem',\r\n    margin: '0 auto',\r\n  },\r\n  dragHereButton: {\r\n    maxWidth: '8.25rem',\r\n    margin: '0 auto',\r\n  },\r\n  errors: {\r\n    display: 'inline-block',\r\n    marginTop: '0.5rem',\r\n    padding: '0.2rem 0.4rem',\r\n    backgroundColor: '#e57373',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n  },\r\n  imageList: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    maxWidth: '600px',\r\n  },\r\n  imageItem: {\r\n    marginTop: '0.5rem',\r\n    marginRight: '0.5rem',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst ApartmentForm = ({ classes }) => {\r\n  const user = useSelector((state) => state.userReducer);\r\n  const [apartmentObject, setApartmentObject] = useState({\r\n    streetAddress: '',\r\n    zipCode: '',\r\n    city: '',\r\n    apartmentType: '',\r\n    surfaceArea: '',\r\n    numberOfRooms: '',\r\n    buildYear: '',\r\n    hasSauna: false,\r\n    hasBalcony: false,\r\n    hasOwnPlot: false,\r\n    hasElevator: false,\r\n    numberOfFloors: '',\r\n    apartmentSetting: '',\r\n    header: '',\r\n    description: '',\r\n    images: 'link',\r\n    price: '',\r\n  });\r\n  const [images, setImages] = useState([]);\r\n  const maxNumber = 6;\r\n  const accepType = ['jpg', 'jpeg', 'gif', 'png'];\r\n  const maxFileSize = 5000000;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const createNew = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoading());\r\n\r\n    const formData = new FormData();\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      formData.append('fileToUpload[]', images[i].file);\r\n    }\r\n\r\n    const apartArray = Object.entries(apartmentObject);\r\n    apartArray.map((i) => formData.append(i[0], i[1]));\r\n\r\n    try {\r\n      const newApartment = await apartmentService.create(formData);\r\n      user.myHome = newApartment.id;\r\n      await userService.editUser(user);\r\n\r\n      dispatch(\r\n        setNotification(\r\n          { message: 'Asunto tallennettu.', alertType: 'success' },\r\n          3\r\n        )\r\n      );\r\n      dispatch(stopLoading());\r\n      setTimeout(() => {\r\n        history.push(`/home/${newApartment.id}`);\r\n      }, 3000);\r\n    } catch (exception) {\r\n      dispatch(stopLoading());\r\n      dispatch(\r\n        setNotification(\r\n          { message: 'Hups! Jokin meni vikaan.', alertType: 'error' },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const update = (e) => {\r\n    setApartmentObject({\r\n      ...apartmentObject,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    setImages(imageList);\r\n  };\r\n\r\n  const updateCheckBox = (e) => {\r\n    setApartmentObject({\r\n      ...apartmentObject,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handlePageChange = () => {\r\n    window.open('https://asuntojen.hintatiedot.fi/haku/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Tallenna asunto\r\n          </Typography>\r\n          <form onSubmit={(e) => createNew(e)}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"streetAddress\"\r\n                  name=\"streetAddress\"\r\n                  label=\"Katuosoite\"\r\n                  fullWidth\r\n                  value={apartmentObject.streetAddress}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  type=\"number\"\r\n                  id=\"surfaceArea\"\r\n                  name=\"surfaceArea\"\r\n                  label=\"Asunnon koko\"\r\n                  fullWidth\r\n                  value={apartmentObject.surfaceArea}\r\n                  onChange={(e) => update(e)}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">m²</InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  label=\"Kaupunki/Paikkakunta\"\r\n                  fullWidth\r\n                  value={apartmentObject.city}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  type=\"number\"\r\n                  id=\"zipCode\"\r\n                  name=\"zipCode\"\r\n                  label=\"Postinumero\"\r\n                  fullWidth\r\n                  value={apartmentObject.zipCode}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  select\r\n                  id=\"numberOfRooms\"\r\n                  label=\"Huoneiden lukumäärä\"\r\n                  name=\"numberOfRooms\"\r\n                  onChange={(e) => update(e)}\r\n                  value={apartmentObject.numberOfRooms}\r\n                  required\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                >\r\n                  <option />\r\n                  {numberOfRoomsList.map((number) => (\r\n                    <option key={number.number} value={number.number}>\r\n                      {number.number}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  select\r\n                  id=\"apartmentType\"\r\n                  label=\"Talotyyppi\"\r\n                  name=\"apartmentType\"\r\n                  onChange={(e) => update(e)}\r\n                  value={apartmentObject.apartmentType}\r\n                  required\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                >\r\n                  <option />\r\n                  {apartmentTypeList.map((type) => (\r\n                    <option key={type.id} value={type.type}>\r\n                      {type.type}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  type=\"number\"\r\n                  id=\"buildYear\"\r\n                  name=\"buildYear\"\r\n                  label=\"Rakennusvuosi\"\r\n                  fullWidth\r\n                  value={apartmentObject.buildYear}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  type=\"number\"\r\n                  id=\"numberOfFloors\"\r\n                  name=\"numberOfFloors\"\r\n                  label=\"Kerroksien määrä\"\r\n                  fullWidth\r\n                  value={apartmentObject.numberOfFloors}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  label=\"Hinta-arvio\"\r\n                  fullWidth\r\n                  value={apartmentObject.price}\r\n                  onChange={(e) => update(e)}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">€</InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  onClick={handlePageChange}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  startIcon={<LaunchIcon />}\r\n                >\r\n                  Apua hinnoitteluun\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"apartmentSetting\"\r\n                  name=\"apartmentSetting\"\r\n                  label=\"Asunnon kokoonpano\"\r\n                  placeholder=\"esim. 2h, k, s\"\r\n                  fullWidth\r\n                  value={apartmentObject.apartmentSetting}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"header\"\r\n                  name=\"header\"\r\n                  label=\"Ilmoituksen otsikko\"\r\n                  fullWidth\r\n                  value={apartmentObject.header}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Kuvaus asunnosta\"\r\n                  name=\"description\"\r\n                  multiline\r\n                  rows={4}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={apartmentObject.description}\r\n                  onChange={(e) => update(e)}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <ImageUploading\r\n                  multiple\r\n                  value={images}\r\n                  onChange={onChange}\r\n                  maxNumber={maxNumber}\r\n                  maxFileSize={maxFileSize}\r\n                  acceptType={accepType}\r\n                  dataURLKey=\"data_url\"\r\n                >\r\n                  {({\r\n                    imageList,\r\n                    onImageUpload,\r\n                    // onImageRemoveAll,\r\n                    onImageRemove,\r\n                    isDragging,\r\n                    dragProps,\r\n                    errors\r\n                  }) => (\r\n                    // write your building UI\r\n                    <div className=\"upload__image-wrapper\">\r\n                      <div\r\n                        className={classes.dragHere}\r\n                        {...dragProps}\r\n                        style={isDragging ? { backgroundColor: '#e57373' } : undefined }\r\n                      >\r\n                        <span className={classes.dragHereSpan}>Raahaa kuva tähän</span>\r\n                        <span>tai</span>\r\n                        <div className={classes.dragHereButton}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={onImageUpload}\r\n                            style={isDragging ? { color: '#fff' } : undefined }\r\n                          >\r\n                          Valitse kuva\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      {errors && <div className={classes.errors}>\r\n                        {errors.maxFileSize && <div>Kuvan tiedostokoko on suurempi kuin {maxFileSize} MB</div>}\r\n                        {errors.acceptType && <div>Kuvan tiedostomuoto ei ole sallittu ({accepType.join(', ')})</div>}\r\n                        {errors.maxNumber && <div>Kuvia voi olla enintään {maxNumber} kpl</div>}\r\n                      </div>}\r\n                      &nbsp;\r\n                      {/* <button onClick={onImageRemoveAll}>\r\n                        Remove all images\r\n                      </button> */}\r\n                      <div className={classes.imageList}>\r\n                        {imageList.map((image, index) => (\r\n                          <div key={index} className={classes.imageItem}>\r\n                            <img src={image['data_url']} alt=\"\" height=\"100\" />\r\n                            <div className=\"image-item__btn-wrapper\">\r\n                              <Button onClick={() => onImageRemove(index)}>\r\n                                Poista kuva\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </ImageUploading>\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasSauna\"\r\n                      checked={apartmentObject.hasSauna}\r\n                      onChange={(e) => updateCheckBox(e)}\r\n                    />\r\n                  }\r\n                  label=\"Oma sauna\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasBalcony\"\r\n                      checked={apartmentObject.hasBalcony}\r\n                      onChange={(e) => updateCheckBox(e)}\r\n                    />\r\n                  }\r\n                  label=\"Parveke\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasOwnPlot\"\r\n                      checked={apartmentObject.ownPlot}\r\n                      onChange={(e) => updateCheckBox(e)}\r\n                    />\r\n                  }\r\n                  label=\"Oma tontti\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasElevator\"\r\n                      checked={apartmentObject.hasElevator}\r\n                      onChange={(e) => updateCheckBox(e)}\r\n                    />\r\n                  }\r\n                  label=\"Hissi\"\r\n                />\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Tallenna\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nApartmentForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ApartmentForm);\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Paper, Typography, IconButton } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport PropTypes from 'prop-types';\r\nimport apartmentService from '../../services/apartments';\r\nimport userService from '../../services/user';\r\nimport { setUser } from '../../reducers/userReducer';\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\nimport { fetchSingleApartment } from '../../reducers/singleApartmentReducer';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(1000 + theme.spacing(2) * 2)]: {\r\n      width: 1000,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(1000 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    minHeight: '70vh',\r\n  },\r\n});\r\n\r\nconst SingleApartment = ({ classes }) => {\r\n  const id = useParams().id;\r\n  const dispatch = useDispatch();\r\n  const singleApartment = useSelector((state) => state.singleApartmentReducer);\r\n  const user = useSelector((state) => state.userReducer);\r\n  const { apartment } = singleApartment;\r\n\r\n  const isLiked = apartment.likes\r\n    ? apartment.likes.some(like => like.id === user.id)\r\n    : false;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSingleApartment(id));\r\n  }, [dispatch, id]);\r\n\r\n  const handleLike = async () => {\r\n    const index = apartment.likes.findIndex(like => like.id === user.id);\r\n    if (index === -1) {\r\n      const time = Date.now();\r\n      apartment.likes.push({\r\n        id: user.id,\r\n        time,\r\n        ownerHasSeen: false\r\n      })\r\n    } else {\r\n      apartment.likes.splice(index, 1);\r\n    }\r\n    apartment.user = apartment.user.id;\r\n\r\n    const ind = user.myLikes.indexOf(id);\r\n    if (ind === -1) {\r\n      user.myLikes.push(id);\r\n    } else {\r\n      user.myLikes.splice(index, 1);\r\n    }\r\n\r\n    try {\r\n      await apartmentService.editApartment(apartment);\r\n      const resUser = await userService.editUser(user);\r\n      dispatch(setUser(resUser.data));\r\n      dispatch(fetchSingleApartment(id));\r\n    } catch (exception) {\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Hups! Jokin meni vikaan. Yritä myöhemmin uudelleen.',\r\n            alertType: 'error',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  let content;\r\n\r\n  if (singleApartment.isFetching) {\r\n    content = (\r\n      <div className={classes.layout}>\r\n        <Skeleton variant=\"rect\" height={400} />\r\n      </div>\r\n    );\r\n  } else if (singleApartment.hasFetchError) {\r\n    content = singleApartment.errorMessage;\r\n  } else {\r\n    content = (\r\n      <>\r\n        <div className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.heading}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    {apartment.price} € | {apartment.surfaceArea} m²\r\n                  </Typography>\r\n                  <IconButton\r\n                    aria-label=\"settings\"\r\n                    onClick={() => handleLike(apartment.id)}\r\n                  >\r\n                    {isLiked ? (\r\n                      <FavoriteIcon color=\"primary\" />\r\n                    ) : (\r\n                      <FavoriteBorderIcon color=\"primary\" />\r\n                    )}\r\n                  </IconButton>\r\n                </div>\r\n                <Typography gutterBottom>\r\n                  {apartment.streetAddress}, {apartment.city} |{' '}\r\n                  {apartment.apartmentSetting}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n              >\r\n                <Carousel\r\n                  showThumbs={false}\r\n                  showStatus={false}\r\n                >\r\n                  {apartment.images\r\n                    ? apartment.images.map((item) =>(\r\n                    <div key={item}>\r\n                      <img src={item} alt=\"apartment\" />\r\n                    </div>\r\n                    ))\r\n                    : <></>\r\n                  }\r\n                </Carousel>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {apartment.header}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>{apartment.description}</Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Asunnon tiedot\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Sijainti: {apartment.streetAddress}, {apartment.zipCode}{' '}\r\n                  {apartment.city}{' '}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Asuinpinta-ala: {apartment.surfaceArea} m²\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Rakennuksen tyyppi: {apartment.apartmentType}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Asunnon kokoonpano: {apartment.apartmentSetting}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Huoneiden määrä: {apartment.numberOfRooms}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>Rakennusvuosi: {apartment.buildYear}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Kerroksien määrä: {apartment.numberOfFloors}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Oma tontti: {apartment.hasOwnPlot ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Parveke: {apartment.hasOwnBalcony ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Hissi: {apartment.hasOwnElevator ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Sauna: {apartment.hasOwnSauna ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>Vaihtohinta: {apartment.price} €</Typography>\r\n              </Grid>\r\n              {Object.keys(apartment).length > 0 &&\r\n              apartment.user.newApartmentType !== undefined &&\r\n              apartment.user.newNumberOfRooms !== undefined ? (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Vaihto\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Typography>\r\n                      Asunnon tyyppi:{' '}\r\n                      {Object.keys(apartment).length &&\r\n                        apartment.user.newApartmentType},{' '}\r\n                      {Object.keys(apartment).length &&\r\n                        apartment.user.newNumberOfRooms}\r\n                      h{' '}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Typography>\r\n                      Postinumero:{' '}\r\n                      {Object.keys(apartment).length &&\r\n                        apartment.user.newPostalCode}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Typography>\r\n                      Hintakatto:{' '}\r\n                      {Object.keys(apartment).length &&\r\n                        apartment.user.newMaxPrice}{' '}\r\n                      €\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Typography>\r\n                      Yhteystieto:{' '}\r\n                      {Object.keys(apartment).length && apartment.user.username}\r\n                    </Typography>\r\n                  </Grid>\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nSingleApartment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SingleApartment);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport userService from '../../services/user';\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(6),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      color: '#000000',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nfunction SignInForm(props) {\r\n  const { classes } = props;\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n  const [passwordMatch, setPasswordMatch] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handlePasswordChange = (value) => {\r\n    setPassword(value);\r\n    if (value === passwordConfirmation) {\r\n      setPasswordMatch(true);\r\n    } else {\r\n      setPasswordMatch(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordConfirmation = (value) => {\r\n    setPasswordConfirmation(value);\r\n    if (value === password) {\r\n      setPasswordMatch(true);\r\n    } else {\r\n      setPasswordMatch(false);\r\n    }\r\n  };\r\n\r\n  const createUser = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const user = await userService.create({\r\n        username: email,\r\n        password,\r\n      });\r\n      setEmail('');\r\n      setPassword('');\r\n      setPasswordConfirmation('');\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: `Käyttäjätili ${user.username} luotu. Voit nyt kirjautua sisään palveluun.`,\r\n            alertType: 'success',\r\n          },\r\n          3\r\n        )\r\n      );\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 3000);\r\n    } catch (exception) {\r\n      dispatch(\r\n        setNotification({ message: exception.message, alertType: 'error' }, 5)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Luo käyttäjätili\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={createUser}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"email\"\r\n              label=\"Sähköposti\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"password\"\r\n              label=\"Salasana\"\r\n              value={password}\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Vahvista salasana\"\r\n              type=\"password\"\r\n              value={passwordConfirmation}\r\n              onChange={(e) => handlePasswordConfirmation(e.target.value)}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={passwordMatch ? false : true}\r\n            >\r\n              Luo tili\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Typography\r\n                  component={RouterLink}\r\n                  to=\"/login\"\r\n                  variant=\"body2\"\r\n                  className={classes.link}\r\n                >\r\n                  Onko sinulla jo tili? Kirjaudu sisään!\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nSignInForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignInForm);\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\nimport { setUser } from '../../reducers/userReducer';\r\nimport { userLogin } from '../../reducers/loginReducer';\r\nimport userService from '../../services/user';\r\nimport apartmentService from '../../services/apartments';\r\nimport storage from '../../utils/storage';\r\nimport { setMyApartment } from '../../reducers/myApartmentReducer';\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      color: '#000000',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nfunction LoginForm(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const loginUser = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await userService.loginUser({\r\n        username: email,\r\n        password,\r\n      });\r\n      if (response.status === 200 && response.data.error) {\r\n        dispatch(\r\n          setNotification(\r\n            {\r\n              message: 'Väärä käyttäjätunnus tai salasana',\r\n              alerType: 'error',\r\n            },\r\n            5\r\n          )\r\n        );\r\n      }\r\n      if (response.status === 200 && response.data.token) {\r\n        const expireTime = Date.now() + 3600000;\r\n        const user = { ...response.data, expireTime };\r\n        storage.saveUser(user);\r\n        apartmentService.setToken(user.token);\r\n        dispatch(setUser(user));\r\n        if (user.myHome) {\r\n          const res = await apartmentService.getSingle(user.myHome);\r\n          if (res.status === 200 && response.data) {\r\n            dispatch(setMyApartment(res.data));\r\n          }\r\n        }\r\n        dispatch(userLogin());\r\n        history.push('/home');\r\n      }\r\n    } catch (exception) {\r\n      console.error(exception.data);\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: exception.message,\r\n            alertType: 'error',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Kirjaudu\r\n          </Typography>\r\n          <form onSubmit={loginUser} className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Sähköposti\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Salasana\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Muista minut\"\r\n            /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disabled={!email || !password ? true : false}\r\n            >\r\n              Kirjaudu\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Unohditko salasanan?\r\n                </Link> */}\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography\r\n                  component={RouterLink}\r\n                  to=\"/signin\"\r\n                  variant=\"body2\"\r\n                  className={classes.link}\r\n                >\r\n                  {'Eikö sinulla ole vielä tiliä? Luo tili!'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LoginForm);\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: '90%',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  accordion: {\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  header: {\r\n    display: 'inline-block',\r\n  },\r\n  launchIcon: {\r\n    verticalAlign: 'sub',\r\n    marginLeft: '10px',\r\n  },\r\n  details: {\r\n    display: 'block',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n  },\r\n  description: {\r\n    maxHeight: '93px',\r\n    overflow: 'hidden',\r\n  },\r\n  threedots: {\r\n    position: 'absolute',\r\n    right: '20px',\r\n    bottom: '43px',\r\n    background: '#fafafa',\r\n    paddingLeft: '8px',\r\n  },\r\n});\r\n\r\nconst UserLikesAccordion = ({ classes, apartment }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion className={classes.accordion}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <div>\r\n            <Typography variant=\"h5\" className={classes.header} gutterBottom>\r\n              {apartment.price} € | {apartment.surfaceArea} m²\r\n            </Typography>\r\n            <Link to={`/home/${apartment.id}`}>\r\n              <LaunchIcon className={classes.launchIcon} color=\"secondary\" />\r\n            </Link>\r\n            <Typography gutterBottom>\r\n              {apartment.streetAddress}, {apartment.city} |{' '}\r\n              {apartment.apartmentSetting}\r\n            </Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n          <img\r\n            src={apartment.images[0]}\r\n            alt=\"apartment\"\r\n            width=\"600\"\r\n            className={classes.image}\r\n          />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {apartment.header}\r\n          </Typography>\r\n          <Typography className={classes.description} gutterBottom>\r\n            {apartment.description}\r\n          </Typography>\r\n          <div className={classes.threedots}>\r\n            <MoreHorizIcon />\r\n          </div>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(`/home/${apartment.id}`)}\r\n          >\r\n            Näytä asunto\r\n          </Button>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(UserLikesAccordion);\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CircularProgress, Paper, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeaderBar from '../common/HeaderBar';\r\nimport UserLikesAccordion from './UserLikesAccordion';\r\nimport apartmentService from '../../services/apartments';\r\nimport { setNewLikes } from '../../reducers/newLikesReducer';\r\nimport { fetchMyApartment } from '../../reducers/myApartmentReducer';\r\nimport { fetchMyFans } from '../../reducers/myFansReducer';\r\n\r\nconst header = {\r\n  title: 'Asunnostasi tykänneet',\r\n  description: 'Nämä haluavat vaihtaa asuntoosi',\r\n  image:\r\n    'https://houcher-apartment-images.s3.eu-central-1.amazonaws.com/pawel-czerwinski-1CZCGvc_DBQ-unsplash.jpg',\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginTop: 0,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  paperProgress: {\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginTop: '15px',\r\n  },\r\n});\r\n\r\nconst MyFans = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const myApartment = useSelector((state) => state.myApartmentReducer);\r\n  const myFans = useSelector((state) => state.myFansReducer);\r\n  const user = useSelector((state) => state.userReducer);\r\n\r\n  useEffect(() => {\r\n    const setLikesSeen = async () => {\r\n      let likesSeen = [];\r\n      if (myApartment.apartment.likes) {\r\n        likesSeen = myApartment.apartment.likes.map((like) => {\r\n          return {...like, ownerHasSeen: true }\r\n        });\r\n        const myApartmentLikesSeen = {\r\n          ...myApartment.apartment,\r\n          likes: likesSeen,\r\n          user: user.id\r\n        };\r\n        try {\r\n          await apartmentService.editApartment(myApartmentLikesSeen);\r\n          dispatch(fetchMyApartment(user.myHome));\r\n          dispatch(setNewLikes(null));\r\n        } catch (exception) {\r\n          console.error(exception);\r\n        }\r\n      };\r\n    };\r\n\r\n    setLikesSeen();\r\n  }, [dispatch, user.id, user.myHome]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMyFans(user.myHome));\r\n  }, [dispatch, user.myHome]);\r\n\r\n  let content;\r\n\r\n  if (user.id && !user.myHome) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä lisännyt oman asuntosi tietoja.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/create'}\r\n          variant=\"button\"\r\n        >\r\n          Lisää oma asunto.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  } else if (myFans.isFetching) {\r\n    content = (\r\n      <Paper className={classes.paperProgress}>\r\n        <CircularProgress className={classes.progress} />\r\n      </Paper>\r\n    );\r\n  } else if (myFans.hasFetchError) {\r\n    content = (\r\n      <Typography variant=\"body1\">\r\n        {myFans.errorMessage}\r\n      </Typography>\r\n    );\r\n  } else if (myFans.myFans && myFans.myFans.length === 0) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Kukaan ei ole vielä tykännyt asunnostasi.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  } else {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        {myFans.myFans &&\r\n          myFans.myFans.map((item) => (\r\n            <UserLikesAccordion key={item.myHome.id} apartment={item.myHome} />\r\n          ))}\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderBar header={header} />\r\n      <div className={classes.layout}>\r\n        {content}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMyFans.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyFans);","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CircularProgress, Paper, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport HeaderBar from '../common/HeaderBar';\r\nimport UserLikesAccordion from './UserLikesAccordion';\r\nimport { fetchMyLikes } from '../../reducers/myLikesReducer';\r\n\r\nconst header = {\r\n  title: 'Tykkäämäsi asunnot',\r\n  description: 'Unelmiesi asunnot ovat tässä',\r\n  image:\r\n    'https://houcher-apartment-images.s3.eu-central-1.amazonaws.com/pawel-czerwinski-1CZCGvc_DBQ-unsplash.jpg',\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginTop: 0,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  paperProgress: {\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginTop: '15px',\r\n  },\r\n});\r\n\r\nconst MyLikes = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer);\r\n  const myLikes = useSelector((state) => state.myLikesReducer);\r\n\r\n  useEffect(() => {\r\n    if (user.id) {\r\n      dispatch(fetchMyLikes(user.id));\r\n    }\r\n  }, [dispatch, user.id]);\r\n\r\n  let content;\r\n\r\n  if (user.id && !user.myHome) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä lisännyt oman asuntosi tietoja.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/create'}\r\n          variant=\"button\"\r\n        >\r\n          Lisää oma asunto.\r\n        </Typography>\r\n    </Paper>\r\n    )\r\n  } else if (myLikes.isFetching) {\r\n    content = (\r\n      <Paper className={classes.paperProgress}>\r\n        <CircularProgress className={classes.progress} />\r\n      </Paper>\r\n    );\r\n  } else if (myLikes.hasFetchError) {\r\n    content = (\r\n      <Typography variant=\"body1\">\r\n        {myLikes.errorMessage}\r\n      </Typography>\r\n    );\r\n  } else if (myLikes.user.myLikes && myLikes.user.myLikes.length === 0) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä tykännyt yhdestäkään asunnosta.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/home'}\r\n          variant=\"button\"\r\n        >\r\n          Katsele asuntoja ja tykästy.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  } else {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        {myLikes.user.myLikes &&\r\n          myLikes.user.myLikes.map((item) => (\r\n            <UserLikesAccordion key={item.id} apartment={item} />\r\n          ))}\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderBar header={header} />\r\n      <div className={classes.layout}>\r\n        {content}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMyLikes.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyLikes);","import React from 'react';\r\nimport { Paper, Typography, Button, Box } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst UserInfoDetails = ({ classes, user, setIsEditing }) => {\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n            Käyttäjäprofiili\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Käyttäjätunnus:&nbsp;\r\n                </Box>\r\n                {user.username}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Nimi näytöllä:&nbsp;\r\n                </Box>\r\n                {user.alias}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography gutterBottom>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Etunimi:&nbsp;\r\n                </Box>\r\n                {user.firstname}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Sukunimi:&nbsp;\r\n                </Box>\r\n                {user.lastname}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n            Etsimäni asunto\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Asunnontyyppi:&nbsp;\r\n                </Box>\r\n                {user.newApartmentType}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Huoneiden määrä:&nbsp;\r\n                </Box>\r\n                {user.newNumberOfRooms}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Postinumero:&nbsp;\r\n                </Box>\r\n                {user.newPostalCode}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography>\r\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\r\n                  Hintakatto:&nbsp;\r\n                </Box>\r\n                {user.newMaxPrice}€\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={10}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setIsEditing(true)}\r\n              >\r\n                Muokkaa\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUserInfoDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserInfoDetails);\r\n","import React from 'react';\r\n\r\nimport { Paper, Typography, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst apartmentTypes = [\r\n  { label: 'Valitse talotyyppi', value: null },\r\n  { label: 'Kerrostalo', value: 'kerrostalo' },\r\n  { label: 'Rivitalo', value: 'rivitalo' },\r\n  { label: 'Paritalo', value: 'paritalo' },\r\n  { label: 'Omakotitalo', value: 'omakotitalo' },\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(20, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst UserInfoForm = ({\r\n  classes,\r\n  user,\r\n  handleChange,\r\n  editProfile,\r\n  cancelEdit,\r\n}) => {\r\n  return (\r\n    <>\r\n      {/* <div className={classes.layout}> */}\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Käyttäjäprofiili\r\n        </Typography>\r\n        <form onSubmit={(e) => editProfile(e)}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Käyttäjätunnus\"\r\n                fullWidth\r\n                disabled\r\n                value={user.username}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"alias\"\r\n                name=\"alias\"\r\n                label=\"Nimi näytöllä\"\r\n                fullWidth\r\n                autoFocus\r\n                value={user.alias}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"firstname\"\r\n                name=\"firstname\"\r\n                label=\"Etunimi\"\r\n                fullWidth\r\n                value={user.firstname}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"lastname\"\r\n                name=\"lastname\"\r\n                label=\"Sukunimi\"\r\n                fullWidth\r\n                value={user.lastname}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n            Etsimäni asunto\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                select\r\n                required\r\n                id=\"newApartmentType\"\r\n                name=\"newApartmentType\"\r\n                label=\"Talotyyppi\"\r\n                fullWidth\r\n                value={user.newApartmentType}\r\n                onChange={(e) => handleChange(e)}\r\n                SelectProps={{ native: true }}\r\n              >\r\n                {apartmentTypes.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                    defaultValue={\r\n                      option.value === user.newApartmentType\r\n                        ? user.newApartmentType\r\n                        : option.value\r\n                    }\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                required\r\n                id=\"newNumberOfRooms\"\r\n                name=\"newNumberOfRooms\"\r\n                label=\"Huoneiden määrä\"\r\n                helperText=\"Keittö mukaanlaskettuna\"\r\n                fullWidth\r\n                value={user.newNumberOfRooms}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                required\r\n                id=\"newPostalCode\"\r\n                name=\"newPostalCode\"\r\n                label=\"Postinumero\"\r\n                fullWidth\r\n                value={user.newPostalCode}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                required\r\n                id=\"newMaxPrice\"\r\n                name=\"newMaxPrice\"\r\n                label=\"Hintakatto\"\r\n                fullWidth\r\n                value={user.newMaxPrice}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={10}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(e) => cancelEdit(e)}\r\n              >\r\n                Peruuta\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Tallenna\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nUserInfoForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserInfoForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport UserInfoDetails from './UserInfoDetails';\r\nimport UserInfoForm from './UserInfoForm';\r\nimport userService from '../../services/user';\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\nimport { setUser } from '../../reducers/userReducer';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: '100%',\r\n    marginTop: 0,\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      maxWidth: 700,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst UserInfo = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer);\r\n  const [isEditingUser, setIsEditingUser] = useState(false);\r\n  const [userObject, setUserObject] = useState({});\r\n\r\n  useEffect(() => {\r\n    setUserObject((obj) => {return({\r\n      ...obj,\r\n      id: user.id,\r\n      username: user.username,\r\n      alias: user.lastname ? user.lastname : '',\r\n      firstname: user.firstname ? user.firstname : '',\r\n      lastname: user.lastname ? user.lastname : '',\r\n      myHome: user.myHome ? user.myHome : null,\r\n      myLikes: user.myLikes ? user.myLikes : [],\r\n      newApartmentType: user.newApartmentType ? user.newApartmentType : '',\r\n      newNumberOfRooms: user.newNumberOfRooms ? user.newNumberOfRooms : '',\r\n      newPostalCode: user.newPostalCode ? user.newPostalCode : '',\r\n      newMaxPrice: user.newMaxPrice ? user.newMaxPrice : '',\r\n    });\r\n    })\r\n  }, [user,]);\r\n\r\n  useEffect(() => {\r\n    if (user.username && (!user.firstname || !user.lastname)) {\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Täydennä profiilisi tiedot aluksi',\r\n            alertType: 'success',\r\n          },\r\n          5\r\n        )\r\n      );\r\n      setIsEditingUser(true);\r\n    } else {\r\n      setIsEditingUser(false);\r\n    }\r\n  }, [user.username, user.firstname, user.lastname, dispatch]);\r\n\r\n  const handleUserChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserObject({\r\n      ...userObject,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const cancelEdit = async (e) => {\r\n    e.preventDefault();\r\n    setIsEditingUser(false);\r\n  };\r\n\r\n  const editProfile = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await userService.editUser(userObject);\r\n      setIsEditingUser(false);\r\n      dispatch(setUser(response.data));\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Profiilisi tiedot päivitettiin',\r\n            alertType: 'success',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    } catch (exception) {\r\n      console.error(exception.data);\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Hups! Jokin meni vikaan. Yritä myöhemmin uudelleen.',\r\n            alertType: 'error',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user.username && (\r\n        <div className={classes.layout}>\r\n          {/* <Paper className={classes.paper}> */}\r\n          {isEditingUser ? (\r\n            <UserInfoForm\r\n              user={userObject}\r\n              handleChange={handleUserChange}\r\n              editProfile={editProfile}\r\n              cancelEdit={cancelEdit}\r\n            />\r\n          ) : (\r\n            <UserInfoDetails user={user} setIsEditing={setIsEditingUser} />\r\n          )}\r\n          {/* </Paper> */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nUserInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserInfo);\r\n","import React from 'react';\r\nimport { Button, CircularProgress, Paper, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    borderRadius: '0 0 4px 4px',\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  paperProgress: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  image: {\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    minHeight: '20rem',\r\n  },\r\n});\r\n\r\nconst UserApartmentDetails = ({\r\n  classes,\r\n  myApartment,\r\n  setIsEditingHome,\r\n}) => {\r\n\r\n  const { apartment } = myApartment;\r\n  let content;\r\n\r\n  if (myApartment.isFetching) {\r\n    content = (\r\n      <Paper className={classes.paperProgress}>\r\n        <CircularProgress className={classes.progress} />\r\n      </Paper>\r\n    );\r\n  } else if (myApartment.hasFetchError) {\r\n    content = myApartment.errorMessage;\r\n  } else {\r\n    content = (\r\n      <>\r\n        <div className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {apartment.price} € | {apartment.surfaceArea} m²\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  {apartment.streetAddress}, {apartment.city} |{' '}\r\n                  {apartment.apartmentSetting}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                className={classes.image}\r\n                style={{\r\n                  backgroundImage: apartment.images ? `url(${apartment.images[0]})` : '',\r\n                }}\r\n              />\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {apartment.header}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>{apartment.description}</Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Asunnon tiedot\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Sijainti: {apartment.streetAddress}, {apartment.zipCode}{' '}\r\n                  {apartment.city}{' '}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Asuinpinta-ala: {apartment.surfaceArea} m²\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Rakennuksen tyyppi: {apartment.apartmentType}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Asunnon kokoonpano: {apartment.apartmentSetting}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Huoneiden määrä: {apartment.numberOfRooms}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>Rakennusvuosi: {apartment.buildYear}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Kerroksien määrä: {apartment.numberOfFloors}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Oma tontti: {apartment.hasOwnPlot ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Parveke: {apartment.hasOwnBalcony ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Hissi: {apartment.hasOwnElevator ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>\r\n                  Sauna: {apartment.hasOwnSauna ? 'Kyllä' : 'Ei'}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>Vaihtohinta: {apartment.Price} €</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setIsEditingHome(true)}\r\n              >\r\n                Muokkaa\r\n              </Button>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return <>{content}</>;\r\n};\r\n\r\nUserApartmentDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserApartmentDetails);\r\n","import React from 'react';\r\nimport { Paper, Typography, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  apartmentTypeList,\r\n} from '../../constants/constants';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    borderRadius: '0 0 4px 4px',\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst UserApartmentForm = ({\r\n  classes,\r\n  myApartment,\r\n  editApartment,\r\n  handleInputChange,\r\n  handleCheckboxChange,\r\n  cancelEdit,\r\n}) => {\r\n  const { apartment } = myApartment;\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Tallenna asunto\r\n          </Typography>\r\n          <form onSubmit={(e) => editApartment(e)}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"streetAddress\"\r\n                  name=\"streetAddress\"\r\n                  label=\"Katuosoite\"\r\n                  fullWidth\r\n                  value={apartment.streetAddress}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"surfaceArea\"\r\n                  name=\"surfaceArea\"\r\n                  label=\"Asunnon koko\"\r\n                  fullWidth\r\n                  value={apartment.surfaceArea}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  label=\"Kaupunki\"\r\n                  fullWidth\r\n                  value={apartment.city}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"zipCode\"\r\n                  name=\"zipCode\"\r\n                  label=\"Postinumero\"\r\n                  fullWidth\r\n                  value={apartment.zipCode}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  select\r\n                  required\r\n                  id=\"apartmentType\"\r\n                  name=\"apartmentType\"\r\n                  label=\"Talotyyppi\"\r\n                  fullWidth\r\n                  value={apartment.apartmentType}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                  SelectProps={{\r\n                    native: true,\r\n                  }}\r\n                >\r\n                  <option />\r\n                  {apartmentTypeList.map((type) => (\r\n                    <option key={type.id} value={type.type}>\r\n                      {type.type}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"numberOfRooms\"\r\n                  name=\"numberOfRooms\"\r\n                  label=\"Huoneiden määrä\"\r\n                  fullWidth\r\n                  value={apartment.numberOfRooms}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"buildYear\"\r\n                  name=\"buildYear\"\r\n                  label=\"Rakennusvuosi\"\r\n                  fullWidth\r\n                  value={apartment.buildYear}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"numberOfFloors\"\r\n                  name=\"numberOfFloors\"\r\n                  label=\"Kerroksien määrä\"\r\n                  fullWidth\r\n                  value={apartment.numberOfFloors}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  label=\"Hinta-arvio\"\r\n                  fullWidth\r\n                  value={apartment.price}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"apartmentSetting\"\r\n                  name=\"apartmentSetting\"\r\n                  label=\"Asunnon kokoonpano\"\r\n                  fullWidth\r\n                  value={apartment.apartmentSetting}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"header\"\r\n                  name=\"header\"\r\n                  label=\"Ilmoituksen otsikko\"\r\n                  fullWidth\r\n                  value={apartment.header}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Kuvaus asunnosta\"\r\n                  name=\"description\"\r\n                  multiline\r\n                  rows={4}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={apartment.description}\r\n                  onChange={(e) => handleInputChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasSauna\"\r\n                      checked={apartment.hasSauna}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  }\r\n                  label=\"Oma sauna\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasBalcony\"\r\n                      checked={apartment.hasBalcony}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  }\r\n                  label=\"Parveke\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasOwnPlot\"\r\n                      checked={apartment.ownPlot}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  }\r\n                  label=\"Oma tontti\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      name=\"hasElevator\"\r\n                      checked={apartment.hasElevator}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  }\r\n                  label=\"Hissi\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={10}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={(e) => cancelEdit(e)}\r\n                >\r\n                  Peruuta\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Tallenna\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUserApartmentForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserApartmentForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport UserApartmentDetails from './UserApartmentDetails';\r\nimport UserApartmentForm from './UserApartmentForm';\r\nimport apartmentService from '../../services/apartments';\r\nimport {\r\n  fetchMyApartment,\r\n  setMyApartment,\r\n} from '../../reducers/myApartmentReducer';\r\nimport { setNotification } from '../../reducers/notificationReducer';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: '100%',\r\n    marginTop: 0,\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      maxWidth: 700,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 20, 1, 20),\r\n  },\r\n});\r\n\r\nconst UserApartment = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.userReducer);\r\n  const myApartment = useSelector((state) => state.myApartmentReducer);\r\n  const [isEditingHome, setIsEditingHome] = useState(false);\r\n  const [myApartmentObject, setMyApartmentObject] = useState({\r\n    apartment: {\r\n      streetAddress: '',\r\n      zipCode: '',\r\n      city: '',\r\n      apartmentType: '',\r\n      surfaceArea: '',\r\n      numberOfRooms: '',\r\n      buildYear: '',\r\n      hasSauna: false,\r\n      hasBalcony: false,\r\n      hasOwnPlot: false,\r\n      hasElevator: false,\r\n      numberOfFloors: '',\r\n      apartmentSetting: '',\r\n      header: '',\r\n      description: '',\r\n      images: '',\r\n      price: '',\r\n    },\r\n    isFetching: false,\r\n    hasFetchError: false,\r\n    errorMessage: null,\r\n  });\r\n  useEffect(() => {\r\n    if (user.myHome === null) {\r\n      history.push('/create');\r\n      dispatch(\r\n        setNotification(\r\n          { message: 'Lisää oman asuntosi tiedot', alertType: 'success' },\r\n          5\r\n        )\r\n      );\r\n    } else if (user.myHome) {\r\n      dispatch(fetchMyApartment(user.myHome));\r\n    }\r\n  }, [dispatch, history, user.myHome]);\r\n\r\n  useEffect(() => {\r\n    setMyApartmentObject(myApartment);\r\n  }, [myApartment]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { target } = event;\r\n    const { name } = target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const apartment = { ...myApartmentObject.apartment };\r\n    apartment[name] = value;\r\n    setMyApartmentObject({\r\n      ...myApartmentObject,\r\n      apartment,\r\n    });\r\n  };\r\n\r\n  const cancelEdit = async (e) => {\r\n    e.preventDefault();\r\n    setIsEditingHome(false);\r\n  };\r\n\r\n  const editApartment = async (e) => {\r\n    e.preventDefault();\r\n    let editedApartment = myApartmentObject.apartment;\r\n    editedApartment.user = user.id;\r\n    try {\r\n      const response = await apartmentService.editApartment(editedApartment);\r\n      setIsEditingHome(false);\r\n      dispatch(setMyApartment(response.data));\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Oman asuntosi tiedot päivitettiin',\r\n            alertType: 'success',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    } catch (exception) {\r\n      console.error(exception);\r\n      dispatch(\r\n        setNotification(\r\n          {\r\n            message: 'Hups! Jokin meni vikaan. Yritä myöhemmin uudelleen.',\r\n            alertType: 'error',\r\n          },\r\n          5\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        {isEditingHome ? (\r\n          <UserApartmentForm\r\n            myApartment={myApartmentObject}\r\n            editApartment={editApartment}\r\n            handleInputChange={handleInputChange}\r\n            // handleCheckboxChange={handleCheckboxChange}\r\n            cancelEdit={cancelEdit}\r\n          />\r\n        ) : (\r\n          <UserApartmentDetails\r\n            myApartment={myApartmentObject}\r\n            setIsEditingHome={setIsEditingHome}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUserApartment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserApartment);\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CircularProgress, Paper, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UserLikesAccordion from './UserLikesAccordion';\r\nimport { fetchMyLikes } from '../../reducers/myLikesReducer';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: '100%',\r\n    marginTop: 0,\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      maxWidth: 700,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  paperProgress: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginTop: '15px',\r\n  },\r\n});\r\n\r\nconst UserLikes = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer);\r\n  const myLikes = useSelector((state) => state.myLikesReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMyLikes(user.id));\r\n  }, [dispatch, user.id]);\r\n\r\n  let content;\r\n\r\n  if (user.id && !user.myHome) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä lisännyt oman asuntosi tietoja.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/create'}\r\n          variant=\"button\"\r\n        >\r\n          Lisää oma asunto.\r\n        </Typography>\r\n    </Paper>\r\n    )\r\n  } else if (myLikes.isFetching) {\r\n    content = (\r\n      <Paper className={classes.paperProgress}>\r\n        <CircularProgress className={classes.progress} />\r\n      </Paper>\r\n    );\r\n  } else if (myLikes.hasFetchError) {\r\n    content = myLikes.errorMessage;\r\n  } else if (myLikes.user.myLikes && myLikes.user.myLikes.length === 0) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä tykännyt yhdestäkään asunnosta.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/home'}\r\n          variant=\"button\"\r\n        >\r\n          Katsele asuntoja ja tykästy.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  } else {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Tykkäämäsi asunnot\r\n        </Typography>\r\n        {myLikes.user.myLikes &&\r\n          myLikes.user.myLikes.map((item) => (\r\n            <UserLikesAccordion key={item.id} apartment={item} />\r\n          ))}\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return <div className={classes.layout}>{content}</div>;\r\n};\r\n\r\nUserLikes.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserLikes);\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CircularProgress, Paper, Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UserLikesAccordion from './UserLikesAccordion';\r\nimport { fetchMyFans } from '../../reducers/myFansReducer';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: '100%',\r\n    marginTop: 0,\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      maxWidth: 700,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  paperProgress: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(3) * 2)]: {\r\n      marginTop: 0,\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  heading: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginTop: '15px',\r\n  },\r\n});\r\n\r\nconst UserFans = ({ classes }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userReducer);\r\n  const myFans = useSelector((state) => state.myFansReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMyFans(user.myHome));\r\n  }, [dispatch, user.myHome]);\r\n\r\n  let content;\r\n\r\n  if (user.id && !user.myHome) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Et ole vielä lisännyt oman asuntosi tietoja.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography\r\n          component={RouterLink}\r\n          to={'/create'}\r\n          variant=\"button\"\r\n        >\r\n          Lisää oma asunto.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n    } else if (myFans.isFetching) {\r\n    content = (\r\n      <Paper className={classes.paperProgress}>\r\n        <CircularProgress className={classes.progress} />\r\n      </Paper>\r\n    );\r\n  } else if (myFans.hasFetchError) {\r\n    content = myFans.errorMessage;\r\n  } else if (myFans.myFans && myFans.myFans.length === 0) {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Kukaan ei ole vielä tykännyt asunnostasi.\r\n        </Typography>\r\n      </Paper>\r\n    )\r\n  } else {\r\n    content = (\r\n      <Paper className={classes.paper}>\r\n        <Typography className={classes.heading} variant=\"h6\" gutterBottom>\r\n          Asunnostasi tykänneiden omat asunnot\r\n        </Typography>\r\n        {myFans.myFans &&\r\n          myFans.myFans.map((item) => (\r\n            <UserLikesAccordion key={item.myHome.id} apartment={item.myHome} />\r\n          ))}\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return <div className={classes.layout}>{content}</div>;\r\n};\r\n\r\nUserFans.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserFans);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = (theme) => ({\r\n  responsive: {\r\n    [theme.breakpoints.down(780)]: {\r\n      display:'none'\r\n    }\r\n  },\r\n});\r\n\r\nconst TabLabel = ({ text, classes }) => {\r\n  \r\n  return (\r\n    <span className={classes.responsive}>\r\n      {text}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TabLabel);","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport {\r\n  AccountCircle,\r\n  HomeOutlined,\r\n  FavoriteBorderOutlined,\r\n  GradeOutlined\r\n} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport UserInfo from './UserInfo';\r\nimport UserApartment from './UserApartment';\r\nimport UserLikes from './UserLikes';\r\nimport UserFans from './UserFans';\r\nimport TabLabel from '../common/TabLabel';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst parseQueryParam = (param) => {\r\n  const result = new RegExp('/?tab=([0-9]+)').exec(param);\r\n  const tabNumber = result ? parseInt(result[1]) : 0;\r\n  return tabNumber;\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(750 + theme.spacing(2) * 2)]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  customflex: {\r\n    justifyContent: 'space-around',\r\n  }\r\n});\r\n\r\nconst UserProfile = ({ classes }) => {\r\n  const [value, setValue] = useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const currentTab = parseQueryParam(window.location.search);\r\n    history.push(`?tab=${currentTab}`);\r\n    setValue(currentTab);\r\n  }, [history])\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    const queryParams = `?tab=${newValue}`\r\n    history.push(queryParams);\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.layout}>\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleTabChange}\r\n            aria-label=\"simple-tabs\"\r\n            variant=\"fullWidth\"\r\n            classes={{ flexContainer: classes.customflex}}\r\n          >\r\n            <Tab\r\n              icon={<AccountCircle />}\r\n              label={<TabLabel text={'Omat tiedot'} />}\r\n              {...a11yProps(0)} />\r\n            <Tab\r\n              icon={<HomeOutlined />}\r\n              label={<TabLabel text={'Oma asunto'} />}\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              icon={<GradeOutlined />}\r\n              label={<TabLabel text={'Asunnostasi tykänneet'} />}\r\n              {...a11yProps(3)}\r\n            />\r\n            <Tab\r\n              icon={<FavoriteBorderOutlined />}\r\n              label={<TabLabel text={'Omat tykkäyksesi'} />}\r\n              {...a11yProps(2)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <UserInfo />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <UserApartment />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <UserFans />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          <UserLikes />\r\n        </TabPanel>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserProfile);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst getQueryString = (name, url = window.location.href) => {\r\n  name = name.replace(/[[]]/g, '\\\\$&');\r\n\r\n  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)', 'i');\r\n  const results = regex.exec(url);\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return '';\r\n  }\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n};\r\n\r\nconst UnauthenticatedRoute = ({ children, ...rest }) => {\r\n  const isLoggedIn = useSelector((state) => state.loginReducer);\r\n  const redirect = getQueryString('redirect');\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {!isLoggedIn ? (\r\n        children\r\n      ) : (\r\n        <Redirect\r\n          to={redirect === '' || redirect === null ? '/home' : redirect}\r\n        />\r\n      )}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedRoute;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Landing from './components/publicView/Landing';\r\nimport AuthenticatedRoute from './components/routes/AuthenticatedRoute';\r\nimport Home from './components/common/Home';\r\nimport ApartmentForm from './components/apartment/ApartmentForm';\r\nimport SingleApartment from './components/apartment/SingleApartment';\r\nimport SignInForm from './components/publicView/SignInForm';\r\nimport LoginForm from './components/publicView/LoginForm';\r\nimport MyFans from './components/user/MyFans';\r\nimport MyLikes from './components/user/MyLikes';\r\nimport UserProfile from './components/user/UserProfile';\r\nimport UnauthenticatedRoute from './components/routes/UnAuthenticatedRoute';\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <UnauthenticatedRoute exact path=\"/signin\">\r\n      <SignInForm />\r\n    </UnauthenticatedRoute>\r\n    <UnauthenticatedRoute exact path=\"/login\">\r\n      <LoginForm />\r\n    </UnauthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/home\">\r\n      <Home />\r\n    </AuthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/home/:id\">\r\n      <SingleApartment />\r\n    </AuthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/create\">\r\n      <ApartmentForm />\r\n    </AuthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/myfans\">\r\n      <MyFans />\r\n    </AuthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/userlikes\">\r\n      <MyLikes />\r\n    </AuthenticatedRoute>\r\n    <AuthenticatedRoute exact path=\"/user\">\r\n      <UserProfile />\r\n    </AuthenticatedRoute>\r\n    <Route path=\"/\">\r\n      <Landing />\r\n    </Route>\r\n  </Switch>\r\n);\r\n","import React from 'react';\r\nimport { Backdrop, CircularProgress } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst styles = (theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n});\r\n\r\nconst Loader = ({ classes }) => {\r\n  const open = useSelector((state) => state.loaderReducer);\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"primary\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Loader);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Notification = () => {\r\n  const classes = useStyles();\r\n  const notification = useSelector((state) => state.notificationReducer);\r\n  if (!notification) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {notification.message && (\r\n        <Snackbar open anchorOrigin={{ vertical: 'top', horizontal: 'left' }}>\r\n          <Alert severity={notification.alertType}>\r\n            {notification.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Badge } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { setNewLikes } from '../../reducers/newLikesReducer';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: 3,\r\n    top: 3,\r\n    color: '#fff',\r\n    padding: '10px 4px',\r\n    fontSize: 14,\r\n  },\r\n}))(Badge);\r\n\r\nconst styles = (theme) => ({\r\n  responsive: {\r\n    [theme.breakpoints.down(780)]: {\r\n      display:'none'\r\n    }\r\n  }\r\n})\r\n\r\nconst LikesBadge = ({ text, classes }) => {\r\n  const dispatch = useDispatch();\r\n  const newLikes = useSelector((state) => state.newLikesReducer);\r\n  const myApartment = useSelector((state) => state.myApartmentReducer);\r\n  \r\n  if (myApartment.apartment.likes) {\r\n    let newLikes = null;\r\n    myApartment.apartment.likes.forEach((like) => {\r\n      if (like.ownerHasSeen === false) {\r\n        newLikes++;\r\n      }\r\n    })\r\n    dispatch(setNewLikes(newLikes));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {newLikes ?\r\n        <StyledBadge color=\"secondary\" badgeContent={newLikes}>\r\n          <span className={classes.responsive}>{text}</span>\r\n        </StyledBadge>\r\n      :\r\n        <span className={classes.responsive}>{text}</span>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)( LikesBadge);\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport {\r\n  AccountCircle,\r\n  HomeWorkOutlined,\r\n  FavoriteBorderOutlined,\r\n  GradeOutlined\r\n} from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport LikesBadge from '../common/LikesBadge';\r\nimport TabLabel from './TabLabel';\r\nimport { userLogout } from '../../reducers/loginReducer';\r\nimport { resetUser } from '../../reducers/userReducer';\r\nimport { showSix } from '../../reducers/viewReducer';\r\nimport { resetApartments } from '../../reducers/apartmentReducer';\r\nimport { resetMyApartment } from '../../reducers/myApartmentReducer';\r\nimport { resetSingleApartment } from '../../reducers/singleApartmentReducer';\r\nimport { resetMyLikes } from '../../reducers/myLikesReducer';\r\nimport { resetMyFans} from '../../reducers/myFansReducer';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  flexgrow: {\r\n    flexGrow: 2,\r\n  },\r\n  titleMain: {\r\n    textDecoration: 'none',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    paddingBottom: 4,\r\n  },\r\n  title: {\r\n    textDecoration: 'none',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    [theme.breakpoints.down(780)]: {\r\n      marginLeft: '1.5rem',\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledTypography = withStyles({\r\n  subtitle1: {\r\n    marginLeft: '1rem',\r\n    display: 'inline-block',\r\n  },\r\n})(Typography);\r\n\r\nconst ApplBar = ({ classes }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector((state) => state.loginReducer);\r\n  const user = useSelector((state) => state.userReducer);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeWindow = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Reset localStorage and all reducers when loggin out\r\n  // Redirect to landing page\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    window.localStorage.clear();\r\n    dispatch(resetUser());\r\n    dispatch(resetApartments());\r\n    dispatch(resetMyApartment());\r\n    dispatch(resetSingleApartment());\r\n    dispatch(resetMyLikes());\r\n    dispatch(resetMyFans());\r\n    dispatch(userLogout());\r\n    dispatch(showSix());\r\n    history.push('/');\r\n  };\r\n\r\n  const menuItemDisabled = user.myHome ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography\r\n            component={RouterLink}\r\n            to={isLoggedIn ? '/home' : '/'}\r\n            variant=\"h6\"\r\n            className={classes.titleMain}\r\n          >\r\n            Houcher\r\n          </Typography>\r\n          {isLoggedIn && (\r\n            <>\r\n              <div className={classes.flexgrow}>\r\n                <StyledTypography\r\n                  component={RouterLink}\r\n                  to=\"/home\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.title}\r\n                >\r\n                  <IconButton>\r\n                    <HomeWorkOutlined />\r\n                  </IconButton>\r\n                  <TabLabel text={'Kaikki asunnot'} />\r\n                </StyledTypography>\r\n                <StyledTypography\r\n                  component={RouterLink}\r\n                  to=\"/myfans\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.title}\r\n                >\r\n                  <IconButton>\r\n                    <GradeOutlined />\r\n                  </IconButton>\r\n                  <LikesBadge\r\n                    myFans={43}\r\n                    text='Asunnostasi tykänneet'\r\n                  />\r\n                </StyledTypography>\r\n                <StyledTypography\r\n                  component={RouterLink}\r\n                  to=\"/userlikes\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.title}\r\n                >\r\n                  <IconButton>\r\n                    <FavoriteBorderOutlined />\r\n                  </IconButton>\r\n                  <TabLabel text={'Omat tykkäyksesi'} />\r\n                </StyledTypography>\r\n              </div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={closeWindow}\r\n              >\r\n                <MenuItem\r\n                  component={RouterLink}\r\n                  to=\"/home\"\r\n                  onClick={() => setAnchorEl(null)}\r\n                >\r\n                  Etusivu\r\n                </MenuItem>\r\n                <MenuItem\r\n                  component={RouterLink}\r\n                  to=\"/user\"\r\n                  onClick={() => setAnchorEl(null)}\r\n                >\r\n                  Omat tiedot\r\n                </MenuItem>\r\n                <MenuItem\r\n                  component={RouterLink}\r\n                  to=\"/create\"\r\n                  onClick={() => setAnchorEl(null)}\r\n                  disabled={menuItemDisabled}\r\n                >\r\n                  Tallenna asunto\r\n                </MenuItem>\r\n                <MenuItem onClick={handleLogout}>Kirjaudu ulos</MenuItem>\r\n              </Menu>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nApplBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ApplBar);\r\n","import React from 'react';\r\nimport { Link, Typography } from '@material-ui/core';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://\">\r\n        Houcher\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n","import React from 'react';\r\n// import { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Copyright from './Copyright';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  footer: {\r\n    // backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n});\r\n\r\nfunction Footer(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <footer className={classes.footer}>\r\n      {/* <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n        Footer\r\n      </Typography>\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        align=\"center\"\r\n        color=\"textSecondary\"\r\n        component=\"p\"\r\n      >\r\n        Sisältöä footeriin.\r\n      </Typography> */}\r\n      <Copyright />\r\n    </footer>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n\r\nimport Routes from './Routes';\r\nimport Loader from './components/common/Loader';\r\nimport Notification from './components/common/Notification';\r\nimport ApplBar from './components/common/ApplBar';\r\nimport Footer from './components/common/Footer';\r\nimport { userLogin } from './reducers/loginReducer';\r\nimport { setUser } from './reducers/userReducer';\r\nimport { fetchMyApartment } from './reducers/myApartmentReducer';\r\nimport userService from './services/user';\r\nimport apartmentservice from './services/apartments';\r\nimport storage from './utils/storage';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#ffa4a2',\r\n      main: '#e57373',\r\n      dark: '#af4448',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      light: '#8eacbc',\r\n      main: '#607d8c',\r\n      dark: '#34515f',\r\n      contrastText: '#000000',\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function getUserData(id) {\r\n      const response = await userService.getUser(id);\r\n      const user = response.data;\r\n      apartmentservice.setToken(loggedInUser.token);\r\n      dispatch(fetchMyApartment(user.myHome));\r\n      dispatch(userLogin());\r\n      dispatch(setUser(user));\r\n    }\r\n\r\n    const loggedInUser = storage.getUser();\r\n    const timeNow = Date.now();\r\n\r\n    if (loggedInUser && loggedInUser.expireTime > timeNow) {\r\n      getUserData(loggedInUser.id);\r\n    } else {\r\n      storage.logoutUser();\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Loader />\r\n      <Notification />\r\n      <ApplBar />\r\n      <Routes />\r\n      <Footer />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { QueryParamProvider } from 'use-query-params';\r\n\r\nimport store from './store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        <App />\r\n      </QueryParamProvider>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}